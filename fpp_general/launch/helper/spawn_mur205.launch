<?xml version="1.0"?>
<launch>
      <arg name="robot_name"/>
      <arg name="tf_prefix"/>
      <arg name="robot_namespace"/>
      <arg name="prefix" default="$(arg tf_prefix)"/> <!--diff drive needs this to be set-->
      
      <arg name="x_pos" default="0.0"/>
      <arg name="y_pos" default="0.0"/>
      <arg name="yaw_rot" default="0.0"/>
      <arg name="init_pose" default="-x $(arg x_pos) -y $(arg y_pos) -Y $(arg yaw_rot) -z 0.0"/>

      <arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface" />

      <arg name="moveit_rviz" default="true" /> <!--This parameter controls if the RVIZ window for controlling the robot arm should open. Default is true, so it will open.-->

      <!-- By default, hide joint_state_publisher's GUI -->
      <arg name="use_gui" default="false" />

      <group ns="$(arg robot_namespace)">
            <param name="robot_description" 
                  command="$(find xacro)/xacro $(find mur205_description)/urdf/mur205.urdf.xacro transmission_hw_interface:=$(arg transmission_hw_interface)  tf_prefix:=$(arg tf_prefix)" />
                              <!-- robot_name:=$(arg robot_name)
                              robot_namespace:=$(arg robot_namespace)-->
                              

            <!-- <param name="robot_description" 
                  command="$(find xacro)/xacro inorder $(find mir_description)/urdf/mir.urdf.xacro"/> Add two dashes before inorder-->

            <!--Spawn the MiR plattform into Gazebo-->
            <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" 
                  args="-urdf -param robot_description -model $(arg robot_name) $(arg init_pose)" 
                  respawn="false" output="screen"/>          

            <!-- Load ros_control controller configurations -->
            <rosparam file="$(find mir_description)/config/joint_state_controller.yaml" command="load" />  
            <rosparam file="$(find mur205_description)/config/diffdrive_controller.yaml" command="load" subst_value="true"/>
            <rosparam file="$(find mur205_moveit_config)/config/arm_controller.yaml" command="load" subst_value="true"/> <!-- Config file for the ur5 arm which contains the controller that actuates the arm joints -->

            <!-- Start the controllers -->
            <node name="controller_spawner" pkg="controller_manager" type="spawner" output="screen" ns="/$(arg robot_namespace)"
                  args="joint_state_controller mobile_base_controller arm_controller"/> <!-- -->

            <!--Include Kalman-filter later again. For now only use odom-->
            <!-- <include file="$(find mur205_gazebo)/launch/ekf.launch.xml"/> -->

            <!-- Robot state publisher that publishes the current state of the robot to tf -->
            <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>

            <!-- Add passive + mimic joints to joint_states topic -->
            <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
                  <rosparam param="source_list" subst_value="true">[joint_states]</rosparam>
                  <param name="rate" value="200.0" />
                  <param name="use_gui" value="$(arg use_gui)"/>
            </node>

            <!-- Localization with amcl particle swarm -->
            <include file="$(find mur205_navigation)/launch/amcl.launch">
                  <arg name="tf_prefix" value="$(arg tf_prefix)"/>
            </include>

            <!-- Navigation with the navigation stack -->
            <include file="$(find mur205_navigation)/launch/move_base_flex.launch">
                  <arg name="tf_prefix" value="$(arg tf_prefix)"/>
            </include>

            <!-- Map both scan data topics on the "scan" topic and filter both scanner topics -->
            <node pkg="topic_tools" type="relay" name="b_scan_relay" args="b_scan scan"/>
            <node pkg="topic_tools" type="relay" name="f_scan_relay" args="f_scan scan"/>

            <node name="b_rep117_laser_filter" pkg="mir_driver" type="rep117_filter.py" output="screen">
                  <remap from="scan" to="b_scan" />
                  <remap from="scan_filtered" to="b_scan_rep117" />
            </node>
                  
            <node name="f_rep117_laser_filter" pkg="mir_driver" type="rep117_filter.py" output="screen">
                  <remap from="scan" to="f_scan" />
                  <remap from="scan_filtered" to="f_scan_rep117" />
            </node>

            <!-- Start all necessary moveit files -->
            <include file="$(find mur205_launch)/launch/helper/start_moveit.launch">
                  <arg name="robot_name" value="$(arg robot_name)"/>
                  <arg name="robot_namespace" value="$(arg robot_namespace)"/>
                  <arg name="tf_prefix" value="$(arg tf_prefix)"/>
                  <arg name="moveit_rviz" value="$(arg moveit_rviz)"/>
            </include>

            <node pkg="fpp_general" type="move_ur5_to_home_pose.py" name="test"/>
      </group>
</launch>